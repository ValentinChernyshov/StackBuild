{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/empty/empty.component.css","webpack:///./src/app/empty/empty.component.html","webpack:///./src/app/empty/empty.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/routing/routing.module.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-home></app-home>\\r\\n\\r\\n<!-- <div>\\r\\n    <h1 *ngIf=\\\"authService.user | async\\\">Welcome {{ (authService.user | async)?.email }}!</h1>\\r\\n    <div *ngIf=\\\"!(authService.user | async)\\\">\\r\\n        <input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"email\\\">\\r\\n        <input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" placeholder=\\\"password\\\">\\r\\n        <button (click)=\\\"signup()\\\" [disabled]=\\\"!email || !password\\\">\\r\\n            Signup\\r\\n        </button>\\r\\n        <button (click)=\\\"login()\\\" [disabled]=\\\"!email || !password\\\">\\r\\n            Login\\r\\n        </button>\\r\\n    </div>\\r\\n    <button (click)=\\\"logout()\\\" *ngIf=\\\"authService.user | async\\\">\\r\\n        Logout\\r\\n    </button>\\r\\n</div> -->\"","import { Component } from '@angular/core';\nimport { AuthService } from './auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  email: string;\n  password: string;\n\n  constructor(public authService: AuthService) {}\n\n  signup() {\n    this.authService.signup(this.email, this.password);\n    this.email = this.password = '';\n  }\n\n  login() {\n    this.authService.login(this.email, this.password);\n    this.email = this.password = '';\n  }\n\n  logout() {\n    this.authService.logout();\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { RoutingModule } from './routing/routing.module';\nimport { EmptyComponent } from './empty/empty.component';\n\nimport { AngularFireModule } from 'angularfire2';\nimport { environment } from '../environments/environment';\nimport { AngularFireAuthModule } from 'angularfire2/auth';\n\nimport { AuthService } from './auth.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    LoginComponent,\n    SignupComponent,\n    EmptyComponent\n  ],\n  imports: [\n    BrowserModule,\n    RoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    FormsModule\n  ],\n  providers: [AuthService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\n\nimport { AngularFireAuth } from 'angularfire2/auth';\nimport * as firebase from 'firebase/app';\n\nimport { Observable } from 'rxjs/observable';\n\n@Injectable()\nexport class AuthService {\n  user: Observable<firebase.User>;\n\n  constructor(private firebaseAuth: AngularFireAuth) {\n    this.user = firebaseAuth.authState;\n  }\n\n  signup(email: string, password: string) {\n    this.firebaseAuth\n      .auth\n      .createUserWithEmailAndPassword(email, password)\n      .then(value => {\n        console.log('Success!', value);\n        alert('You have successfully sign up');\n      })\n      .catch(err => {\n        console.log('Something went wrong:',err.message);\n        alert('The email address is badly formatted');\n      });\n  }\n\n  login(email: string, password: string) {\n    this.firebaseAuth\n      .auth\n      .signInWithEmailAndPassword(email, password)\n      .then(value => {\n        console.log('Nice, it worked!');\n        alert('You have successfully logged in');\n      })\n      .catch(err => {\n        console.log('Something went wrong:',err.message);\n        alert('Wrong username or password');\n        // wrongUserOrPass = 'Wrong username or password';\n      });\n  }\n\n  logout() {\n    this.firebaseAuth\n      .auth\n      .signOut();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2VtcHR5L2VtcHR5LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-empty',\n  templateUrl: './empty.component.html',\n  styleUrls: ['./empty.component.css']\n})\nexport class EmptyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"navbar\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Stack-Scarcity</a>\\n    <div class=\\\"navbar-inner\\\">\\n        <ul class=\\\"nav\\\">\\n          <li>\\n            <a routerLink=\\\"/empty\\\">Home</a>\\n          </li>\\n          <li>\\n            <a routerLink=\\\"/login\\\">Log In</a>\\n          </li>\\n          <li>\\n            <a routerLink=\\\"/signup\\\">Sign Up</a>\\n          </li>\\n        </ul>\\n    </div>\\n  </div>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"d-flex justify-content-center h-100\\\">\\n  <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n          <h3>Sign In</h3>\\n          <div class=\\\"d-flex justify-content-end social_icon\\\">\\n              <span><i class=\\\"fab fa-facebook-square\\\"></i></span>\\n              <span><i class=\\\"fab fa-google-plus-square\\\"></i></span>\\n              <span><i class=\\\"fab fa-twitter-square\\\"></i></span>\\n          </div>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n          <form>\\n              <div class=\\\"input-group form-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"email\\\">\\n              </div>\\n              <div class=\\\"input-group form-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"password\\\">\\n              </div>\\n              <!-- <div *ngIf=\\\"!authService.user | async\\\" class=\\\"row align-items-center remember\\\"> // если неправильный логин или пароль -->\\n              <div class=\\\"row align-items-center remember\\\">\\n                    {{wrongUserOrPass}}\\n                  <!-- Wrong username or password -->\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <button (click)=\\\"login()\\\" [disabled]=\\\"!email || !password\\\" class=\\\"btn float-right login_btn\\\">Login</button>\\n              </div>\\n          </form>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n          <div class=\\\"d-flex justify-content-center links\\\">\\n              Don't have an account?<a routerLink=\\\"/signup\\\">Sign Up</a>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(public authService: AuthService) {}\n\n  login() {\n    this.authService.login(this.email, this.password);\n    this.email = this.password = '';\n  }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { EmptyComponent } from '../empty/empty.component';\nimport { HomeComponent } from '../home/home.component';\nimport { LoginComponent } from '../login/login.component';\nimport { SignupComponent } from '../signup/signup.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'empty', pathMatch: 'full'},\n  { path: 'empty', component: EmptyComponent},\n  { path: 'login', component: LoginComponent},\n  { path: 'signup', component: SignupComponent}\n];\n\n@NgModule({\n  declarations: [],\n  imports:      [ RouterModule.forRoot(routes)],\n  exports:      [ RouterModule ]\n})\n\nexport class RoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ251cC9zaWdudXAuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"d-flex justify-content-center h-100\\\">\\n  <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n          <h3>Registration</h3>\\n      </div>\\n      <div class=\\\"card-body\\\">\\n          <form>\\n              <div class=\\\"input-group form-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-user\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"email\\\">\\n              </div>\\n              <div class=\\\"input-group form-group\\\">\\n                  <div class=\\\"input-group-prepend\\\">\\n                      <span class=\\\"input-group-text\\\"><i class=\\\"fas fa-key\\\"></i></span>\\n                  </div>\\n                  <input type=\\\"password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" placeholder=\\\"password\\\">\\n              </div>\\n              <div *ngIf=\\\"!authService.user | async\\\" class=\\\"row align-items-center remember\\\"> // по задумке строка должна отображаться после успешной регистрации\\n                   Your account has been created!\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <button (click)=\\\"signup()\\\" [disabled]=\\\"!email || !password\\\" class=\\\"btn float-right login_btn\\\">Sign Up</button>\\n              </div>\\n          </form>\\n      </div>\\n      <div class=\\\"card-footer\\\">\\n          <div class=\\\"d-flex justify-content-center links\\\">\\n              Already have an account?<a routerLink=\\\"/login\\\">Log In</a>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  email: string;\n  password: string;\n\n  constructor(public authService: AuthService) {}\n\n  signup() {\n    this.authService.signup(this.email, this.password);\n    this.email = this.password = '';\n  }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyBOPjTuZMpabUchWHOvDXUv1ilAxlNkju8',\n    authDomain: 'stack2.firebaseapp.com',\n    databaseURL: 'https://stack2.firebaseio.com',\n    projectId: 'stack2',\n    storageBucket: '',\n    messagingSenderId: '802640622866'\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}